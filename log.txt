Time - 10 hours
Sep 30
To print the board...encountered so many errors, learned how to format the output
Took me hours to figure out out to perform recursion to create a board and print the board 
Discovered format function, newline character

Asked user for input..validated input..did coin toss..determined winner
Worked on setting a piece to desired row and col number

For validation input, could not validate if the row label is strictly numeric

Wrote function to determine row and col indices for the inputted position - parse-position

Wrote functions to get the color from row = i and col = j in the board 

added bounds checking in update board


wrote function consecutive that return true/false based on the consecutive state and the number of consecutives 
that we wanna look for is provided in count parameter

added function to determine the total number of horizontal consecutives, vertical, backward digonal and forward diagonal
wrote function to give me the total number of 4 consecutives

explanation of the consecutive sum code

for horizontal, recursively check every row for horizontal and increase sum if found 
same for vertical, every col 

for backward diagonal, start from 15 row 1 column, go upto 0row 1 col 
then continue from 0 row 2 col upoto 0 row 16 col 

for forward diagonal, start from 15 fow 19 column, go upto 0 row 19 col,
then continue from 0 row 18 col upto 0 row 4 column

//------------------------------------------------------------------------------------------------------------------------
Time-
Oct 1

wrote functions to check for pairs, capture pairs, and get the capture count for a particular x and y, utilized gte-color function already
defined in board.lisp


wrote functions to determine consecutive count in each direction of a given position 
wrote function to check if 5 consecutive is possible in a given direction utilizing the above written function
wrote function to return the list of directions where 5 consecutive is possible

Did the same for 4 consecutive as well, 3 as well, havenot checked for them yet TODO

wrote frunction to start the round and play game...added implemnetation to change turn, colors

added code to check for 3 intersections away in the 2nd turn in the playgame function

added code in playgame that actually captures the pairs and also updates the capture count

finished game logic...when capture pairs is 5 or 5 consecutive is reached, round ends, then 4 cons is counted



-----------------------------------------------------------------------------------------------------------------------------
Oct 2
Worked on save-game 
after every turn the game asks user to save the game or not ..it also asks for the filename 
could not figure out how to save the game to a txt file in lisp 

//============================================================================================================================


Oct 3

Wrote functions to determine the total number of pieces in the board. This will be useful in determining turn num for a loaded game

Determining turn num is useful if a user had saved a game before the 2nd turn of white could come.

Wrote function to determine game-stat from the read data from the file 

enabled to load from file and play game from the loaded stats
Could not figure out how to read from file..every time stack overflow occured




Oct 7
Fixed bug with multiple captures, single capture was okay...but multiple was returning an error. In function check
andupdate

Oct 10
Worked on loading from file and saving game to file. Both works now. 
In strategy.lisp added function to determine the row and col for the max priority in the board


i gave 4 cons slightly higher priority than pairs captured, 12 for 4 cons, 10 for pairs captured
this is because pairs captured can reach a plateau but 4 cons can never
i gave 3cons 6 priority


Oct 11

Worked on strategy. Created a priority board 20 by 20. Created an algorithm that goes through every empty space
and assigns a priority to that space based on different criterias. 

Created a function in utility that checks for the number of empty spaces right after the consecutive pieces.
This is important in determining whether a 3 cons or a 2 cons have the room to grow up to a 4cons at least.

Wrote logic to avoid placing in places where you are setting yourself up for a capture


Oct14
added row validation in userinput. 1a would give me an error. So had to write a function that checks if the 
row label is strictly numeric
if human is playing, it now provides option to ask for help in the playgame function. it is right after asking to save the game 

if computer is playing, it does not ask for help, instead it places its piece according to strategy and passes the turn to human now.











